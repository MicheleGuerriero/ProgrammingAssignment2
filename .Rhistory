x <- 1:4
y <- 2:3
x+y
class(x+y)
data<-read.csv(file = "hw_data.csv", header = TRUE, sep = ",")
data<-read.csv(file = "hw1_data.csv", header = TRUE, sep = ",")
View(data)
View(data)
x=is.na(x = data)
sum(is.na(data[, 1]))
data<-na.omit(data)
View(data)
View(data)
mean(data[,1])
data<-data[data[,1]>31, data[,4]>90]
data<-data[data[,1]>31, , data[,4]>90]
data<-data[data[,1]>31, , data[,4]>90,]
data<-data[data[,1]>31,]
View(data)
View(data)
data<-read.csv(file = "hw1_data.csv", header = TRUE, sep = ",")
data<-na.omit(data)
data<-data[data[,1]>31,]
data<-data[data[,4]>90,]
mean(data[, 2])
data<-read.csv(file = "hw1_data.csv", header = TRUE, sep = ",")
data<-data[data[, 5]==6]
data<-read.csv(file = "hw1_data.csv", header = TRUE, sep = ",")
data<-data[data[, 5]==6]
data<-data[data[, 5]=6]
data<-data[data[, 5]=="6"]
data<-data[data[, 5]==6,]
mean(data[,4])
data<-read.csv(file = "hw1_data.csv", header = TRUE, sep = ",")
data<-data[data[, 5]==5,]
max(data[,1])
data<-read.csv(file = "hw1_data.csv", header = TRUE, sep = ",")
data<-na.omit(data)
data<-data[data[, 5]==5,]
max(data[,1])
R.version.string
install.packages("swirl")
library(swirl)
install.packages("swirl", dependencies=TRUE)
library(swirl)
install.packages("evaluate")
library(swirl)
install.packages("swirl", dependencies=TRUE)
library(swirl)
install.packages("swirl", dependencies=TRUE)
install.packages("evaluate")
library(evaluate)
install.packages("swirl", dependencies=TRUE)
library(swirl)
install.packages("testthat")
library(evaluate)
install.packages("testthat")
install.packages("evaluate")
install.packages("evaluate")
install.packages("swirl", dependencies=TRUE)
install.packages("evaluate")
install.packages("swirl")
install.packages("testthat")
install.packages("swirl")
library(swirl)
swirl()
5+7
x<-5+7
x
y<-x-3
y
c(1.1, 9, 3.14)
z<-c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z*2
z*2+100
my_sqrt<-sqrt(z-1)
my_sqrt
my_div<-z /my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
clean
siwrl()
swirl()
swirl()
library(swirl)
swirl()
num_vect<-c(0.5 , 55, -10, 6)
bye()
swirl()
source('~/complete.R')
source("complete.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
library(datasets)
data(iris)
library(datasets)
data(iris)
View(iris)
View(iris)
virginica<-iris[, "Species"="virginica"]
virginica<-iris[, ,"Species"="virginica"]
virginica<-iris[, ,iris["Species"="virginica"]]
virginica<-iris[ ,iris["Species"="virginica"]]
?spliy
?split
s<-split(iris, iris$Species,)
s
lapply(s, function(x) colMeans(x))
lapply(s, function(x) colMeans(x[,,]))
lapply(s, function(x) colMeans(x[,]))
lapply(s, function(x) colMeans(x[, c("Length")]))
lapply(s, function(x) colMeans(x[, c("Sepal.Length")]))
s<-split(iris, iris$Species)
lapply(s, function(x) colMeans(x[, c("Sepal.Length")]))
lapply(s, function(x) colMeans(x[, c("Sepal.Length")]))
s[1]
s[3]
colMeans(s[3][, c("Sepal.Length")])
x<-s[3]
colMeans(x[, c("Sepal.Length")])
colMean(x[, c("Sepal.Length")])
?colMeans
x<-s[3]
x
colMeans(x[, "Sepal.Length"])
colMeans(x[, 2])
means(x[, 2])
mean(x[, 2])
x
mean(x[, 1])
s<-split(iris, iris$Species)
lapply(s, function(x) colMeans(x[, c("Sepal.Length")]))
?colMeans
library(datasets)
data(iris)
s<-split(iris, iris$Species)
library(datasets)
data(iris)
s<-split(iris, iris$Species)
View(iris)
View(iris)
lapply(virginica, function(x) colMeans(x[, c("Sepal.Length","Sepal.Width")]))
lapply(s, function(x) colMeans(x[, c("Sepal.Length","Sepal.Width")]))
lapply(s, function(x) colMeans(x[, c("Sepal.Length")]))
,"Sepal.Width"
library(datasets)
data(iris)
s<-split(iris, iris$Species)
lapply(s, function(x) colMeans(x[, c("Sepal.Length","Sepal.Width")]))
library(datasets)
data(iris)
iris
View(iris)
apply(iris, 1, mean)
rowMeans(iris[, 1:4])
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
data(mtcars)
library(datasets)
data(mtcars)
head(mtcars)
View(mtcars)
View(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
mean(mtcars$mpg, mtcars$cyl)
apply(mtcars, 2, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
debug(ls)
ls
ls
ls
debug(ls)
ls
?debug
exit
0
ls
debug(ls)
ls
library(datasets)
data(mtcars)
Ã¹
sapply(split(mtcars$hp, mtcars$cyl), mean)
res<-sapply(split(mtcars$hp, mtcars$cyl), mean)
res[3]-res[1]
?ls
ls
ls()
debug(ls)
ls()
source("cachematrix.R")
setwd("~/ProgrammingAssignment2")
source("cachematrix.R")
matrix<-matrix(c(1:4),2,2)
matrix
cacheSolve(matrix)
cachedMatrix<- makeCacheMatrix(matrix)
cacheSolve(cachedMatrix)
cacehMatrix$get()
cachedMatrix$get()
cachedMatrix$getinv()
